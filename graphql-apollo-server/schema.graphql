### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type Mutation {
  createDraft(authorEmail: String, content: String, title: String!): Post!
  createOneTag(data: TagCreateInput!): Tag!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  login(email: String!, password: String!): AuthPayload!
  publish(id: ID): Post
  signup(email: String!, name: String, password: String!): AuthPayload!
}

type Post {
  author: User
  content: String
  id: Int!
  published: Boolean!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int, skip: Int): [Tag!]!
  title: String!
}

input PostCreateManyWithoutTagsInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutTagsInput!]
}

input PostCreateWithoutTagsInput {
  author: UserCreateOneWithoutPostsInput
  content: String
  published: Boolean
  title: String!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  feed: [Post!]!
  filterPosts(searchString: String): [Post!]!
  me: User
  post(where: PostWhereUniqueInput!): Post
  tag(where: TagWhereUniqueInput!): Tag
  user(where: UserWhereUniqueInput!): User
}

type Tag {
  name: String!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, skip: Int): [Post!]!
}

input TagCreateInput {
  createdAt: DateTime
  deprecated: Boolean!
  name: String!
  posts: PostCreateManyWithoutTagsInput
  updatedAt: DateTime
}

input TagWhereUniqueInput {
  name: String
}

type User {
  email: String!
  id: Int!
  name: String
  posts: [Post!]!
}

input UserCreateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutPostsInput
}

input UserCreateWithoutPostsInput {
  email: String!
  name: String
  password: String!
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
